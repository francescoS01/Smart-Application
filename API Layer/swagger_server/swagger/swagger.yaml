openapi: 3.0.3
info:
  title: Smart App Group C - API Layer
  description: |-
    This is the API used for internal communication between services and by external applications and tools to allow data access.
    Made by the integration team: Andrea Alberti, Anna Francesca Montagnoli, Matteo Simone
  version: 1.1.1
servers:
- url: /
tags:
- name: machine data
  description: methods for accessing machine data
- name: machineXkpi
  description: Operations related to the relation between machines and KPI
- name: KPI
  description: KPI related methods
- name: user
  description: user data methods
- name: alert
  description: alert related methods
- name: report
  description: report related methods
- name: data
  description: raw machine data methods
- name: RAG
  description: RAG service operations
paths:
  /ai-query:
    post:
      tags:
      - RAG
      summary: Submits a query to the ai agent returning its response
      description: "Submits a textual query to the ai agent returning a JSON response.\
        \ The response type field determines the format of the content generated by\
        \ the ai agent. The response may thus relate to a text, a graph or a report."
      operationId: ai_query_post
      parameters:
      - name: query
        in: header
        description: The textual query to send to the ai agent
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/AIQuery'
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIResponse'
        "401":
          description: Access token not valid
          content:
            application/json:
              schema:
                type: string
                example: Unauthorized
                x-content-type: application/json
        "500":
          description: Can't connect to the requested service
          content:
            application/json:
              schema:
                type: string
                example: Connection Error
                x-content-type: application/json
      security:
      - api_token_auth: []
      x-openapi-router-controller: swagger_server.controllers.rag_controller
  /machine:
    get:
      tags:
      - machine data
      summary: Gets machine related informations
      description: "Returns machine informations including status according to optional\
        \ filters. The query can be restricted over machine ids, machine types, production\
        \ lines, factories and machine status. A non specified parameter implies no\
        \ selection will be performed over it. For efficiency purposes, if status\
        \ data is not required, refer to /machine/summary instead."
      operationId: machine_get
      parameters:
      - name: machines
        in: header
        description: Specific machines to restrict the query to
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/MachineIDFilter'
      - name: machineTypes
        in: header
        description: Specific machine types to restrict the query to
        required: false
        style: simple
        explode: false
        schema:
          type: array
          items:
            type: string
            example: Laser Welding
        example:
        - Laser Welding
      - name: productionLines
        in: header
        description: Specific production lines to restrict the query to
        required: false
        style: simple
        explode: false
        schema:
          type: array
          items:
            type: integer
            example: 2
        example:
        - 1
      - name: factories
        in: header
        description: Specific factories to restrict the query to
        required: false
        style: simple
        explode: false
        schema:
          type: array
          items:
            type: string
            example: Factory X
        example:
        - Factory X
      - name: machineStatus
        in: header
        description: Specific machine status to restrict the query to
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/MachineStatus'
      responses:
        "200":
          description: Succesful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MachineCompleteInfo'
                x-content-type: application/json
        "400":
          description: Invalid parameters
          content:
            application/json:
              schema:
                type: string
                example: Invalid parameters
                x-content-type: application/json
        "401":
          description: Access token not valid
          content:
            application/json:
              schema:
                type: string
                example: Unauthorized
                x-content-type: application/json
        "500":
          description: Can't connect to the requested service
          content:
            application/json:
              schema:
                type: string
                example: Connection Error
                x-content-type: application/json
      security:
      - api_token_auth: []
      x-openapi-router-controller: swagger_server.controllers.machine_data_controller
    post:
      tags:
      - machine data
      summary: Adds a new machine to the system
      description: Adds a new machine to the system by providing its informations.
        The created machine id will be returned in case of a successful request.
      operationId: machine_post
      parameters:
      - name: name
        in: header
        description: The name of the machine
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: Laser Welding Machine 10
      - name: productionLine
        in: header
        description: The production line of the machine
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          example: 2
      - name: factory
        in: header
        description: The factory of the machine
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: Factory X
      - name: machineType
        in: header
        description: The machine type of the machine
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: Laser Welding
      responses:
        "201":
          description: Resource created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ID'
        "400":
          description: Invalid parameters
          content:
            application/json:
              schema:
                type: string
                example: Invalid parameters
                x-content-type: application/json
        "401":
          description: Access token not valid
          content:
            application/json:
              schema:
                type: string
                example: Unauthorized
                x-content-type: application/json
        "404":
          description: Machine not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MachineNotFoundError'
        "500":
          description: Can't connect to the requested service
          content:
            application/json:
              schema:
                type: string
                example: Connection Error
                x-content-type: application/json
      security:
      - api_token_auth: []
      x-openapi-router-controller: swagger_server.controllers.machine_data_controller
  /machine/summary:
    get:
      tags:
      - machine data
      summary: Gets basic machine informations
      description: "Returns machine informations according to optional filters. The\
        \ query can be restricted over machine ids, machine types, production lines\
        \ and factories. A non specified parameter implies no selection will be performed\
        \ over it."
      operationId: machine_summary_get
      parameters:
      - name: machines
        in: header
        description: Specific machines to restrict the query to
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/MachineIDFilter'
      - name: machineTypes
        in: header
        description: Specific machine types to restrict the query to
        required: false
        style: simple
        explode: false
        schema:
          type: array
          items:
            type: string
            example: Laser Welding
        example:
        - Laser Welding
      - name: productionLines
        in: header
        description: Specific production lines to restrict the query to
        required: false
        style: simple
        explode: false
        schema:
          type: array
          items:
            type: integer
            example: 2
        example:
        - 1
      - name: factories
        in: header
        description: Specific factories to restrict the query to
        required: false
        style: simple
        explode: false
        schema:
          type: array
          items:
            type: string
            example: Factory X
        example:
        - Factory X
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MachineBasicInfo'
                x-content-type: application/json
        "400":
          description: Invalid parameters
          content:
            application/json:
              schema:
                type: string
                example: Invalid parameters
                x-content-type: application/json
        "401":
          description: Access token not valid
          content:
            application/json:
              schema:
                type: string
                example: Unauthorized
                x-content-type: application/json
        "500":
          description: Can't connect to the requested service
          content:
            application/json:
              schema:
                type: string
                example: Connection Error
                x-content-type: application/json
      security:
      - api_token_auth: []
      x-openapi-router-controller: swagger_server.controllers.machine_data_controller
  /machine/status:
    get:
      tags:
      - machine data
      summary: Gets status informations of machines
      description: "Returns the status of all machines unless a list of machine ids\
        \ is provided as filter, in which case only the requested machines status\
        \ will be returned. The status of a machine indicates whether sensor data\
        \ for it has not been collected for 30 hours."
      operationId: machine_status_get
      parameters:
      - name: machines
        in: header
        description: Specific machines to restrict the query to
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/MachineIDFilter'
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/inline_response_200'
                x-content-type: application/json
        "400":
          description: Invalid parameters
          content:
            application/json:
              schema:
                type: string
                example: Invalid parameters
                x-content-type: application/json
        "401":
          description: Access token not valid
          content:
            application/json:
              schema:
                type: string
                example: Unauthorized
                x-content-type: application/json
        "500":
          description: Can't connect to the requested service
          content:
            application/json:
              schema:
                type: string
                example: Connection Error
                x-content-type: application/json
      security:
      - api_token_auth: []
      x-openapi-router-controller: swagger_server.controllers.machine_data_controller
  /machine/{id}:
    get:
      tags:
      - machine data
      summary: Returns informations of a given machine
      description: "Returns all informations of a machine given its id(including machine\
        \ status, see /machine/status for details)."
      operationId: machine_id_get
      parameters:
      - name: id
        in: path
        description: ID of the resource
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ID'
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MachineCompleteInfo'
        "401":
          description: Access token not valid
          content:
            application/json:
              schema:
                type: string
                example: Unauthorized
                x-content-type: application/json
        "404":
          description: Machine not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MachineNotFoundError'
        "500":
          description: Can't connect to the requested service
          content:
            application/json:
              schema:
                type: string
                example: Connection Error
                x-content-type: application/json
      security:
      - api_token_auth: []
      x-openapi-router-controller: swagger_server.controllers.machine_data_controller
    put:
      tags:
      - machine data
      summary: Updates machine data
      description: "Modifies the name, production line, factory and/or machine type\
        \ of a given machine. If a parameter is not provided, the original machine\
        \ data for it will be kept"
      operationId: machine_id_put
      parameters:
      - name: id
        in: path
        description: ID of the resource
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ID'
      - name: name
        in: header
        description: The updated name of the machine
        required: false
        style: simple
        explode: false
        schema:
          type: string
          example: Laser Welding Machine 10
      - name: productionLine
        in: header
        description: The updated production line of the machine
        required: false
        style: simple
        explode: false
        schema:
          type: integer
          example: 2
      - name: factory
        in: header
        description: The updated factory of the machine
        required: false
        style: simple
        explode: false
        schema:
          type: string
          example: Factory X
      - name: machineType
        in: header
        description: The updated machine type of the machine
        required: false
        style: simple
        explode: false
        schema:
          type: string
          example: Laser welding
      responses:
        "200":
          description: Success Message
          content:
            application/json:
              schema:
                type: string
                example: Success
                x-content-type: application/json
        "400":
          description: Invalid parameters
          content:
            application/json:
              schema:
                type: string
                example: Invalid parameters
                x-content-type: application/json
        "401":
          description: Access token not valid
          content:
            application/json:
              schema:
                type: string
                example: Unauthorized
                x-content-type: application/json
        "404":
          description: Machine not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MachineNotFoundError'
        "500":
          description: Can't connect to the requested service
          content:
            application/json:
              schema:
                type: string
                example: Connection Error
                x-content-type: application/json
      security:
      - api_token_auth: []
      x-openapi-router-controller: swagger_server.controllers.machine_data_controller
    delete:
      tags:
      - machine data
      summary: Deletes machine informations
      description: Deletes informations of a given machine
      operationId: machine_delete
      parameters:
      - name: id
        in: path
        description: ID of the resource
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ID'
      responses:
        "200":
          description: Success Message
          content:
            application/json:
              schema:
                type: string
                example: Success
                x-content-type: application/json
        "401":
          description: Access token not valid
          content:
            application/json:
              schema:
                type: string
                example: Unauthorized
                x-content-type: application/json
        "404":
          description: Machine not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MachineNotFoundError'
        "500":
          description: Can't connect to the requested service
          content:
            application/json:
              schema:
                type: string
                example: Connection Error
                x-content-type: application/json
      security:
      - api_token_auth: []
      x-openapi-router-controller: swagger_server.controllers.machine_data_controller
  /machine/{id}/KPIList:
    get:
      tags:
      - machine data
      summary: Returns machine KPI list
      description: Returns the list of KPI supported by the machine according to its
        type. A KPI is considered as supported if the machine directly produces it
        or every KPI needed for its computation are supported by the machine.
      operationId: machine_id_kpi_list_get
      parameters:
      - name: id
        in: path
        description: ID of the resource
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ID'
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/KPIID'
                x-content-type: application/json
        "401":
          description: Access token not valid
          content:
            application/json:
              schema:
                type: string
                example: Unauthorized
                x-content-type: application/json
        "404":
          description: Machine not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MachineNotFoundError'
        "500":
          description: Can't connect to the requested service
          content:
            application/json:
              schema:
                type: string
                example: Connection Error
                x-content-type: application/json
      security:
      - api_token_auth: []
      x-openapi-router-controller: swagger_server.controllers.machine_data_controller
  /machineXKPI:
    get:
      tags:
      - machineXkpi
      summary: Returns info on the relation between machines and KPIs
      description: "Returns basic info on both machines and KPIs and the relation\
        \ between them expressed as <machine id, KPI numerical id> pairs."
      operationId: machine_xkpi_get
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MachineXKPIInfo'
        "401":
          description: Access token not valid
          content:
            application/json:
              schema:
                type: string
                example: Unauthorized
                x-content-type: application/json
        "500":
          description: Can't connect to the requested service
          content:
            application/json:
              schema:
                type: string
                example: Connection Error
                x-content-type: application/json
      security:
      - api_token_auth: []
      x-openapi-router-controller: swagger_server.controllers.machine_xkpi_controller
  /KPI:
    get:
      tags:
      - KPI
      summary: Returns all supported KPI
      description: "Returns the set of all KPI supported by the machines(directly\
        \ produced or computed by the KPI engine), optionally filtered by KPI id and\
        \ category. If the formula of a KPI is null, it is a basic KPI, otherwise\
        \ can be computed by the KPI engine."
      operationId: kpi_get
      parameters:
      - name: kpiFilter
        in: header
        description: Optional list of KPI ids to restrict the query to
        required: false
        style: simple
        explode: false
        schema:
          type: array
          example:
          - power
          items:
            type: string
            example: Power
      - name: categoryFilter
        in: header
        description: Optional list of KPI categories to restrict the query to
        required: false
        style: simple
        explode: false
        schema:
          type: array
          example:
          - Energy
          items:
            type: string
            example: Energy
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/KPIBasicInfo'
                x-content-type: application/json
        "400":
          description: Invalid parameters
          content:
            application/json:
              schema:
                type: string
                example: Invalid parameters
                x-content-type: application/json
        "401":
          description: Access token not valid
          content:
            application/json:
              schema:
                type: string
                example: Unauthorized
                x-content-type: application/json
        "500":
          description: Can't connect to the requested service
          content:
            application/json:
              schema:
                type: string
                example: Connection Error
                x-content-type: application/json
      security:
      - api_token_auth: []
      x-openapi-router-controller: swagger_server.controllers.kpi_controller
    post:
      tags:
      - KPI
      summary: "[Unimplemented] Adds a new KPI to the system"
      description: ""
      operationId: kpi_post
      requestBody:
        description: Required KPI object to post
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KPIBasicInfo'
        required: true
      responses:
        "201":
          description: Resource created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ID'
        "400":
          description: Invalid KPI object
        "401":
          description: Access token not valid
          content:
            application/json:
              schema:
                type: string
                example: Unauthorized
                x-content-type: application/json
        "500":
          description: Can't connect to the requested service
          content:
            application/json:
              schema:
                type: string
                example: Connection Error
                x-content-type: application/json
      security:
      - api_token_auth: []
      x-openapi-router-controller: swagger_server.controllers.kpi_controller
  /KPI/{KPIID}:
    get:
      tags:
      - KPI
      summary: Get basic informations on a given KPI
      description: Returns basic informations on a KPI given its name. A null formula
        implies it is a basic KPI.
      operationId: kpi_id_get
      parameters:
      - name: KPIID
        in: path
        description: ID of the KPI
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/KPIID'
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KPIBasicInfo'
        "401":
          description: Access token not valid
          content:
            application/json:
              schema:
                type: string
                example: Unauthorized
                x-content-type: application/json
        "404":
          description: KPI not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KPINotFoundError'
        "500":
          description: Can't connect to the requested service
          content:
            application/json:
              schema:
                type: string
                example: Connection Error
                x-content-type: application/json
      security:
      - api_token_auth: []
      x-openapi-router-controller: swagger_server.controllers.kpi_controller
  /KPI/{KPIID}/{machineID}/values:
    get:
      tags:
      - KPI
      summary: Returns a series of KPI values of a machine
      description: "Returns a series of KPI values of a machine. A timeframe can be\
        \ provided to only retrieve KPI data in the interval [start, end). This timeframe\
        \ will be divided in intervals according to 'aggregationInterval' parameter.\
        \ On each interval the function 'aggregationOp' will be applied, returning\
        \ one item per interval. Checks will be performed to ensure the machine and\
        \ KPI exist (in case they don't a 404 error will be returned) and the machine\
        \ supports the KPI(in case this is false a 400 error will be returned)."
      operationId: kpi_id_machine_kpi_values_get
      parameters:
      - name: KPIID
        in: path
        description: ID of the KPI
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/KPIID'
      - name: machineID
        in: path
        description: ID of the machine
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          example: 1
      - name: aggregationOp
        in: header
        description: Aggregation function to perform (defaults to sum)
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/AggregationType'
      - name: aggregationInterval
        in: header
        description: Requested time granularity of KPI (defaults to day)
        required: false
        style: simple
        explode: false
        schema:
          type: string
          example: day
          enum:
          - day
          - week
          - month
          - year
          - overall
      - name: startDate
        in: header
        description: The first timestamp of the time window of results
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: date
          example: 2023-11-20
      - name: endDate
        in: header
        description: The last timestamp of the time window of results
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: date
          example: 2023-11-21
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MachineKPIValues'
        "400":
          description: Invalid parameters
          content:
            application/json:
              schema:
                type: string
                example: Invalid parameters
                x-content-type: application/json
        "401":
          description: Access token not valid
          content:
            application/json:
              schema:
                type: string
                example: Unauthorized
                x-content-type: application/json
        "404":
          description: KPI/machine not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
        "500":
          description: Can't connect to the requested service
          content:
            application/json:
              schema:
                type: string
                example: Connection Error
                x-content-type: application/json
      security:
      - api_token_auth: []
      x-openapi-router-controller: swagger_server.controllers.kpi_controller
  /KPI/{KPIID}/machines:
    get:
      tags:
      - KPI
      summary: Returns machines that support KPI
      description: Returns the set of all machine ids supporting the KPI. A KPI is
        considered as supported if the machine directly produces it or every KPI needed
        for its computation are supported by the machine.
      operationId: kpi_id_machines_get
      parameters:
      - name: KPIID
        in: path
        description: ID of the KPI
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/KPIID'
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
        "401":
          description: Access token not valid
          content:
            application/json:
              schema:
                type: string
                example: Unauthorized
                x-content-type: application/json
        "404":
          description: KPI not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KPINotFoundError'
        "500":
          description: Can't connect to the requested service
          content:
            application/json:
              schema:
                type: string
                example: Connection Error
                x-content-type: application/json
      security:
      - api_token_auth: []
      x-openapi-router-controller: swagger_server.controllers.kpi_controller
  /data/raw:
    get:
      tags:
      - data
      summary: "Gets raw sensors data filtered by machine ID, data type (as KPI ids),\
        \ and time window"
      description: "Access to basic KPI related to sensor data. The query can be restricted\
        \ to specific machines and/or KPIs given their ids and a time window. The\
        \ time window is interpreted as [from, to). Since KPIs are aggregated using\
        \ multiple functions, 'aggregation selector' determines the type of aggregation\
        \ to retrieve."
      operationId: data_get
      parameters:
      - name: machines
        in: header
        description: Specific machines to restrict the query to
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/MachineIDFilter'
      - name: dataTypes
        in: header
        description: Specific basic kpi to restrict the query to
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/DataTypeFilter'
      - name: aggregationSelector
        in: header
        description: Aggregation type to retrieve
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: sum
          enum:
          - sum
          - avg
          - min
          - max
      - name: from
        in: header
        description: The first timestamp of the time window of results
        required: false
        style: simple
        explode: false
        schema:
          type: string
          format: date-time
      - name: to
        in: header
        description: The last timestamp of the time window of results
        required: false
        style: simple
        explode: false
        schema:
          type: string
          format: date-time
      responses:
        "200":
          description: Succesful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SensorData'
                x-content-type: application/json
        "400":
          description: Invalid parameters
          content:
            application/json:
              schema:
                type: string
                example: Invalid parameters
                x-content-type: application/json
        "401":
          description: Access token not valid
          content:
            application/json:
              schema:
                type: string
                example: Unauthorized
                x-content-type: application/json
        "500":
          description: Can't connect to the requested service
          content:
            application/json:
              schema:
                type: string
                example: Connection Error
                x-content-type: application/json
      security:
      - api_token_auth: []
      x-openapi-router-controller: swagger_server.controllers.data_controller
  /data/preprocessed:
    get:
      tags:
      - data
      summary: "Gets preprocessed sensors data filtered by machine ID, data type (as\
        \ KPI ids), and time window"
      description: "Access to basic KPI related to preprocessed sensor data. The query\
        \ can be restricted to specific machines and/or KPIs given their ids and a\
        \ time window. The time window is interpreted as [from, to). Since KPIs are\
        \ aggregated using multiple functions, 'aggregation selector' determines the\
        \ type of aggregation to retrieve."
      operationId: data_preprocessed_get
      parameters:
      - name: machines
        in: header
        description: Specific machines to restrict the query to
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/MachineIDFilter'
      - name: dataTypes
        in: header
        description: Specific basic kpi to restrict the query to
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/DataTypeFilter'
      - name: aggregationSelector
        in: header
        description: Aggregation type to retrieve
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: sum
          enum:
          - sum
          - avg
          - min
          - max
      - name: from
        in: header
        description: The first timestamp of the time window of results
        required: false
        style: simple
        explode: false
        schema:
          type: string
          format: date-time
      - name: to
        in: header
        description: The last timestamp of the time window of results
        required: false
        style: simple
        explode: false
        schema:
          type: string
          format: date-time
      responses:
        "200":
          description: Succesful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SensorData'
                x-content-type: application/json
        "400":
          description: Invalid parameters
          content:
            application/json:
              schema:
                type: string
                example: Invalid parameters
                x-content-type: application/json
        "401":
          description: Access token not valid
          content:
            application/json:
              schema:
                type: string
                example: Unauthorized
                x-content-type: application/json
        "500":
          description: Can't connect to the requested service
          content:
            application/json:
              schema:
                type: string
                example: Connection Error
                x-content-type: application/json
      security:
      - api_token_auth: []
      x-openapi-router-controller: swagger_server.controllers.data_controller
  /data/{KPIID}/{machineID}:
    post:
      tags:
      - data
      summary: Adds new sensor data to the system
      description: Adds new aggregated values of a KPI for a given machine id. AggregationType
        and values must be of the same length. 400 error will be returned if the machine
        can't generate such KPI.
      operationId: data_post
      parameters:
      - name: KPIID
        in: path
        description: ID of the KPI
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/KPIID'
      - name: machineID
        in: path
        description: ID of the machine
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          example: 1
      - name: aggregationType
        in: header
        description: The aggregation types of the KPI values to be added
        required: true
        style: simple
        explode: false
        schema:
          type: array
          example:
          - sum
          - min
          items:
            type: string
            enum:
            - max
            - sum
            - min
            - avg
      - name: values
        in: header
        description: Aggregated values of the KPI
        required: true
        style: simple
        explode: false
        schema:
          type: array
          example:
          - 4.5
          - 1
          items:
            type: number
      responses:
        "200":
          description: Success Message
          content:
            application/json:
              schema:
                type: string
                example: Success
                x-content-type: application/json
        "400":
          description: Invalid parameters
          content:
            application/json:
              schema:
                type: string
                example: Invalid parameters
                x-content-type: application/json
        "401":
          description: Access token not valid
          content:
            application/json:
              schema:
                type: string
                example: Unauthorized
                x-content-type: application/json
        "404":
          description: KPI/machine not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
        "500":
          description: Can't connect to the requested service
          content:
            application/json:
              schema:
                type: string
                example: Connection Error
                x-content-type: application/json
      security:
      - api_token_auth: []
      x-openapi-router-controller: swagger_server.controllers.data_controller
  /user:
    get:
      tags:
      - user
      summary: Returns user informations
      description: Returns the informations of the connected user
      operationId: user_get
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserBasicInfo'
        "401":
          description: Access token not valid
          content:
            application/json:
              schema:
                type: string
                example: Unauthorized
                x-content-type: application/json
        "500":
          description: Can't connect to the requested service
          content:
            application/json:
              schema:
                type: string
                example: Connection Error
                x-content-type: application/json
      security:
      - api_token_auth: []
      x-openapi-router-controller: swagger_server.controllers.user_controller
    post:
      tags:
      - user
      summary: Registers a new user account
      description: Registers a new user account and returns the id of the new account
        in the response body if successful.
      operationId: user_post
      parameters:
      - name: username
        in: header
        description: A username for subsequent access
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: Fabrizio04
      - name: email
        in: header
        description: Email of the user
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: firstName
        in: header
        description: Name of the user
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: lastName
        in: header
        description: Surname of the user
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: password
        in: header
        description: Password of the user for subsequent access
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: role
        in: header
        description: Role of the user
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/UserRole'
      responses:
        "201":
          description: Resource created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ID'
        "400":
          description: Invalid parameters
          content:
            application/json:
              schema:
                type: string
                example: Invalid parameters
                x-content-type: application/json
        "401":
          description: Access token not valid
          content:
            application/json:
              schema:
                type: string
                example: Unauthorized
                x-content-type: application/json
        "500":
          description: Can't connect to the requested service
          content:
            application/json:
              schema:
                type: string
                example: Connection Error
                x-content-type: application/json
      security:
      - api_token_auth: []
      x-openapi-router-controller: swagger_server.controllers.user_controller
  /user/{id}:
    get:
      tags:
      - user
      summary: "[Unimplemented] Returns user informations"
      description: Returns informations of a user given their id
      operationId: user_id_get
      parameters:
      - name: id
        in: path
        description: ID of the resource
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ID'
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserBasicInfo'
        "401":
          description: Access token not valid
          content:
            application/json:
              schema:
                type: string
                example: Unauthorized
                x-content-type: application/json
        "500":
          description: Can't connect to the requested service
          content:
            application/json:
              schema:
                type: string
                example: Connection Error
                x-content-type: application/json
      security:
      - api_token_auth: []
      x-openapi-router-controller: swagger_server.controllers.user_controller
    put:
      tags:
      - user
      summary: "[Unimplemented] Updates a user account"
      description: Updates informations of a user
      operationId: user_id_put
      parameters:
      - name: id
        in: path
        description: ID of the resource
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ID'
      - name: username
        in: header
        required: false
        style: simple
        explode: false
        schema:
          type: string
          example: Fabrizio04
      - name: email
        in: header
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: firstName
        in: header
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: lastName
        in: header
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: password
        in: header
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: role
        in: header
        description: The role of the user to add
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/UserRole'
      responses:
        "200":
          description: Successful operation
        "400":
          description: Invalid parameters
          content:
            application/json:
              schema:
                type: string
                example: Invalid parameters
                x-content-type: application/json
        "401":
          description: Access token not valid
          content:
            application/json:
              schema:
                type: string
                example: Unauthorized
                x-content-type: application/json
        "404":
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotFoundError'
        "500":
          description: Can't connect to the requested service
          content:
            application/json:
              schema:
                type: string
                example: Connection Error
                x-content-type: application/json
      security:
      - api_token_auth: []
      x-openapi-router-controller: swagger_server.controllers.user_controller
    delete:
      tags:
      - user
      summary: "[Unimplemented] Deletes a user"
      description: Deletes the user given its id
      operationId: user_id_delete
      parameters:
      - name: id
        in: path
        description: ID of the resource
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ID'
      responses:
        "200":
          description: Success Message
          content:
            application/json:
              schema:
                type: string
                example: Success
                x-content-type: application/json
        "401":
          description: Access token not valid
          content:
            application/json:
              schema:
                type: string
                example: Unauthorized
                x-content-type: application/json
        "404":
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotFoundError'
        "500":
          description: Can't connect to the requested service
          content:
            application/json:
              schema:
                type: string
                example: Connection Error
                x-content-type: application/json
      security:
      - api_token_auth: []
      x-openapi-router-controller: swagger_server.controllers.user_controller
  /user/login:
    post:
      tags:
      - user
      summary: Logs user into the system
      description: "Attempts to log a user into the system given with their credentials.\
        \ On success, returns a token that is needed in the 'Authorization' header\
        \ of protected API calls. The token has a TTL."
      operationId: user_login_post
      parameters:
      - name: username
        in: header
        description: The username for login
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: password
        in: header
        description: The password for login in clear text
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationInfo'
        "401":
          description: Wrong credentials error
          content:
            application/json:
              schema:
                type: string
                example: Wrong credentials
                x-content-type: application/json
        "500":
          description: Can't connect to the requested service
          content:
            application/json:
              schema:
                type: string
                example: Connection Error
                x-content-type: application/json
      x-openapi-router-controller: swagger_server.controllers.user_controller
  /user/logout:
    get:
      tags:
      - user
      summary: Logs out current user
      description: "Logs out current user, invalidating their authentication token."
      operationId: user_logout_get
      responses:
        "200":
          description: Success Message
          content:
            application/json:
              schema:
                type: string
                example: Success
                x-content-type: application/json
        "401":
          description: Access token not valid
          content:
            application/json:
              schema:
                type: string
                example: Unauthorized
                x-content-type: application/json
        "500":
          description: Can't connect to the requested service
          content:
            application/json:
              schema:
                type: string
                example: Connection Error
                x-content-type: application/json
      security:
      - api_token_auth: []
      x-openapi-router-controller: swagger_server.controllers.user_controller
  /alert:
    get:
      tags:
      - alert
      summary: "Gets alerts fitered by machine ID, severity, and time window"
      description: "Returns informations related to alerts, optionally restricted\
        \ to given machine ids, alert importance and time window."
      operationId: alert_get
      parameters:
      - name: machines
        in: header
        description: Specific machines to restrict the query to
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/MachineIDFilter'
      - name: severity
        in: header
        description: Alerts importance to restrict the query to.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/Severity'
      - name: from
        in: header
        description: First timestamp of the time window of results
        required: false
        style: simple
        explode: false
        schema:
          type: string
          format: date-time
      - name: to
        in: header
        description: Last timestamp of the time window of results
        required: false
        style: simple
        explode: false
        schema:
          type: string
          format: date-time
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Alert'
                x-content-type: application/json
        "400":
          description: Invalid parameters
          content:
            application/json:
              schema:
                type: string
                example: Invalid parameters
                x-content-type: application/json
        "401":
          description: Access token not valid
          content:
            application/json:
              schema:
                type: string
                example: Unauthorized
                x-content-type: application/json
        "500":
          description: Can't connect to the requested service
          content:
            application/json:
              schema:
                type: string
                example: Connection Error
                x-content-type: application/json
      security:
      - api_token_auth: []
      x-openapi-router-controller: swagger_server.controllers.alert_controller
    post:
      tags:
      - alert
      summary: Posts new alert
      description: Adds a new alert to the system. Checks for machine existence (404
        if the machine doesn't exist). Returns the id of the added alert if successful.
      operationId: alert_post
      parameters:
      - name: timestamp
        in: header
        description: Time of generation of the alert
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: date-time
      - name: machineID
        in: header
        description: ID of the machine related to the new alert
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ID'
      - name: severity
        in: header
        description: Importance of the new alert
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/Severity'
      - name: description
        in: header
        description: Description of the alert
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: KPI
        in: header
        description: ID of the KPI or an expression with KPI IDs related to the new
          alert
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/KPIID'
      responses:
        "201":
          description: Resource created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ID'
        "400":
          description: Invalid parameters
          content:
            application/json:
              schema:
                type: string
                example: Invalid parameters
                x-content-type: application/json
        "401":
          description: Access token not valid
          content:
            application/json:
              schema:
                type: string
                example: Unauthorized
                x-content-type: application/json
        "404":
          description: Machine not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MachineNotFoundError'
        "500":
          description: Can't connect to the requested service
          content:
            application/json:
              schema:
                type: string
                example: Connection Error
                x-content-type: application/json
      security:
      - api_token_auth: []
      x-openapi-router-controller: swagger_server.controllers.alert_controller
  /alert/id/{id}:
    get:
      tags:
      - alert
      summary: Gets single alert by alert ID
      description: Gets informations on an alert given its id.
      operationId: alert_id_get
      parameters:
      - name: id
        in: path
        description: ID of the resource
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ID'
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Alert'
        "401":
          description: Access token not valid
          content:
            application/json:
              schema:
                type: string
                example: Unauthorized
                x-content-type: application/json
        "404":
          description: User not found
          content:
            application/json:
              schema:
                type: string
                example: Alert not found
                x-content-type: application/json
        "500":
          description: Can't connect to the requested service
          content:
            application/json:
              schema:
                type: string
                example: Connection Error
                x-content-type: application/json
      security:
      - api_token_auth: []
      x-openapi-router-controller: swagger_server.controllers.alert_controller
  /alert/machine/{id}:
    get:
      tags:
      - alert
      summary: Returns alerts of a given machine
      description: "Returns a list of alerts of a given machine(identified by its\
        \ id), optionally filtered over a given time period. By default, all the alerts\
        \ of such machine are returned."
      operationId: alert_machine_id
      parameters:
      - name: id
        in: path
        description: ID of the resource
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ID'
      - name: startTime
        in: header
        description: Starting time of the alerts
        required: false
        style: simple
        explode: false
        schema:
          type: string
          format: date-time
      - name: endTime
        in: header
        description: Ending time of the alerts
        required: false
        style: simple
        explode: false
        schema:
          type: string
          format: date-time
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Alert'
                x-content-type: application/json
        "400":
          description: Invalid parameters
          content:
            application/json:
              schema:
                type: string
                example: Invalid parameters
                x-content-type: application/json
        "401":
          description: Access token not valid
          content:
            application/json:
              schema:
                type: string
                example: Unauthorized
                x-content-type: application/json
        "404":
          description: User not found
          content:
            application/json:
              schema:
                type: string
                example: Alert not found
                x-content-type: application/json
        "500":
          description: Can't connect to the requested service
          content:
            application/json:
              schema:
                type: string
                example: Connection Error
                x-content-type: application/json
      security:
      - api_token_auth: []
      x-openapi-router-controller: swagger_server.controllers.alert_controller
  /alert/monitor:
    get:
      tags:
      - alert
      summary: Returns the list of monitored KPI expressions
      description: Returns the list of KPI expressions monitored by the KPI engine
        to fire alerts.
      operationId: alert_monitor_get
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AlertMonitor'
                x-content-type: application/json
        "401":
          description: Access token not valid
          content:
            application/json:
              schema:
                type: string
                example: Unauthorized
                x-content-type: application/json
        "500":
          description: Can't connect to the requested service
          content:
            application/json:
              schema:
                type: string
                example: Connection Error
                x-content-type: application/json
      security:
      - api_token_auth: []
      x-openapi-router-controller: swagger_server.controllers.alert_controller
    post:
      tags:
      - alert
      summary: Adds a new alert monitor
      description: Adds a new expression to the list of monitored expressions used
        to fire alerts.
      operationId: alert_monitor_post
      parameters:
      - name: timeWindow
        in: header
        description: "Time in seconds used to evaluate the expression, a window of\
          \ 3600 evaluates the expression on the last hour"
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          example: 36000
      - name: expression
        in: header
        description: Expression involving KPIs and aggregation functions on a given
          machine
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: sum(Good Cycles) > 1000
      - name: machineID
        in: header
        description: Id of the machine to monitor
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ID'
      responses:
        "201":
          description: Resource created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UUID'
        "400":
          description: Invalid parameters
          content:
            application/json:
              schema:
                type: string
                example: Invalid parameters
                x-content-type: application/json
        "401":
          description: Access token not valid
          content:
            application/json:
              schema:
                type: string
                example: Unauthorized
                x-content-type: application/json
        "500":
          description: Can't connect to the requested service
          content:
            application/json:
              schema:
                type: string
                example: Connection Error
                x-content-type: application/json
      security:
      - api_token_auth: []
      x-openapi-router-controller: swagger_server.controllers.alert_controller
  /alert/monitor/{uuid}:
    delete:
      tags:
      - alert
      summary: Removes a monitored expression
      description: Removes a monitored expression given its id.
      operationId: alert_monitor_id_delete
      parameters:
      - name: uuid
        in: path
        description: UUID of the resource
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: Success Message
          content:
            application/json:
              schema:
                type: string
                example: Success
                x-content-type: application/json
        "401":
          description: Access token not valid
          content:
            application/json:
              schema:
                type: string
                example: Unauthorized
                x-content-type: application/json
        "404":
          description: Alert monitor not found
          content:
            application/json:
              schema:
                type: string
                example: Alert monitor not found
                x-content-type: application/json
        "500":
          description: Can't connect to the requested service
          content:
            application/json:
              schema:
                type: string
                example: Connection Error
                x-content-type: application/json
      security:
      - api_token_auth: []
      x-openapi-router-controller: swagger_server.controllers.alert_controller
  /report:
    get:
      tags:
      - report
      summary: "[Unimplemented] Returns list of reports"
      description: "Returns a list of reports. Optionally filtered over a given time\
        \ period. By default, all the reports are returned"
      operationId: report_get
      parameters:
      - name: startTime
        in: header
        description: Starting time of the reports
        required: false
        style: simple
        explode: false
        schema:
          type: string
          format: date-time
      - name: endTime
        in: header
        description: Ending time of the reports
        required: false
        style: simple
        explode: false
        schema:
          type: string
          format: date-time
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReportHeader'
                x-content-type: application/json
        "400":
          description: Invalid parameters
          content:
            application/json:
              schema:
                type: string
                example: Invalid parameters
                x-content-type: application/json
        "401":
          description: Access token not valid
          content:
            application/json:
              schema:
                type: string
                example: Unauthorized
                x-content-type: application/json
        "500":
          description: Can't connect to the requested service
          content:
            application/json:
              schema:
                type: string
                example: Connection Error
                x-content-type: application/json
      security:
      - api_token_auth: []
      x-openapi-router-controller: swagger_server.controllers.report_controller
  /report/{id}:
    get:
      tags:
      - report
      summary: "[Unimplemented] Returnsreport data"
      description: Returns a report given its id
      operationId: report_id_get
      parameters:
      - name: id
        in: path
        description: ID of the resource
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ID'
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Report'
                x-content-type: application/json
        "400":
          description: Invalid parameters
          content:
            application/json:
              schema:
                type: string
                example: Invalid parameters
                x-content-type: application/json
        "401":
          description: Access token not valid
          content:
            application/json:
              schema:
                type: string
                example: Unauthorized
                x-content-type: application/json
        "404":
          description: Report not found
        "500":
          description: Can't connect to the requested service
          content:
            application/json:
              schema:
                type: string
                example: Connection Error
                x-content-type: application/json
      security:
      - api_token_auth: []
      x-openapi-router-controller: swagger_server.controllers.report_controller
components:
  schemas:
    UserNotFoundError:
      type: string
      description: User not found error message
      example: User not found
    MachineNotFoundError:
      type: string
      description: Machine not found error message
      example: Machine not found
    KPINotFoundError:
      type: string
      description: KPI not found error message
      example: KPI not found
    UUID:
      type: string
      description: UUID of the resource
      example: f9fe2b44-90a2-4c9a-dd0f-d8a913a31328
    ID:
      type: integer
      description: Numerical unique identifier of the resource
      format: int64
      example: 1
    KPIID:
      type: string
      description: A unique identifier of a KPI
      example: good_cycles
    KPIName:
      type: string
      description: Name of the KPI
      example: Good Cycles
    AggregationType:
      type: string
      example: sum
      enum:
      - avg
      - max
      - min
      - sum
    AuthenticationInfo:
      type: string
      description: The authentication token to be used in subsequent API calls
      example: Bearer axi9enflrn
    AIQuery:
      type: string
      description: Textual query for the AI agent
      example: What is the total power consumed in the last week?
    DataTypeFilter:
      type: array
      description: List of KPI ids
      example:
      - power
      - good_cycles
      items:
        $ref: '#/components/schemas/KPIID'
    MachineIDFilter:
      type: array
      description: List of machine identifiers
      example:
      - 1
      - 2
      items:
        $ref: '#/components/schemas/ID'
    MachineCompleteInfo:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/MachineStatus'
      description: Holds informations of a machine
      example:
        status: idle
      allOf:
      - $ref: '#/components/schemas/MachineBasicInfo'
    MachineBasicInfo:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ID'
        machineType:
          type: string
          example: Laser cutter
        productionLine:
          type: integer
          example: 2
        factory:
          type: string
          example: Ghezzano Plant 1
        name:
          type: string
          example: Laser Welding Machine 2
      description: Holds basic informations of a machine
      example:
        factory: Ghezzano Plant 1
        productionLine: 2
        name: Laser Welding Machine 2
        id: 1
        machineType: Laser cutter
    MachineStatus:
      type: string
      description: "The status of a machine. A machine is considered operational if\
        \ and only if sensor data for it has been received in the past 30 hours, otherwise\
        \ it is conidered idle."
      example: idle
      enum:
      - operational
      - idle
    KPIBasicInfo:
      type: object
      properties:
        nameID:
          $ref: '#/components/schemas/KPIID'
        description:
          $ref: '#/components/schemas/KPIName'
        formula:
          type: string
          description: the expression used to compute the KPI or null for KPIs that
            don't require additional computations.
        category:
          type: string
          example: Energy
        unit:
          type: string
          description: Unit of measurement
          example: W
      description: Basic informations of a KPI
      example:
        unit: W
        nameID: good_cycles
        description: Good Cycles
        formula: formula
        category: Energy
    KPIBasicInfoWithNumericID:
      type: object
      properties:
        relationNumber:
          $ref: '#/components/schemas/ID'
      description: Holds informations of a KPI with an additional numerical id.
      example:
        relationNumber: 1
      allOf:
      - $ref: '#/components/schemas/KPIBasicInfo'
    MachineXKPIInfo:
      type: object
      properties:
        machines:
          type: array
          items:
            $ref: '#/components/schemas/MachineBasicInfo'
        kpis:
          type: array
          items:
            $ref: '#/components/schemas/KPIBasicInfoWithNumericID'
        relation:
          type: array
          items:
            $ref: '#/components/schemas/MachineXKPIInfo_relation'
      description: "Basic informations of a set of machines and KPIs and their relationship\
        \ (representing which machine can generate which KPIs). The relationship is\
        \ made of couples of integers for efficiency purposes, but the kpi numerical\
        \ id should not be used as kpi id for further requests (use nameID instead)."
      example:
        machines:
        - factory: Ghezzano Plant 1
          productionLine: 2
          name: Laser Welding Machine 2
          id: 1
          machineType: Laser cutter
        - factory: Ghezzano Plant 1
          productionLine: 2
          name: Laser Welding Machine 2
          id: 1
          machineType: Laser cutter
        kpis:
        - relationNumber: 1
        - relationNumber: 1
        relation:
        - machineID: null
          kpiID: null
        - machineID: null
          kpiID: null
    UserBasicInfo:
      type: object
      properties:
        name:
          type: string
          example: Mario
        surename:
          type: string
          example: Rossi
        username:
          type: string
          example: mario.rossi
        email:
          type: string
          example: mario.rossi@example.it
        role:
          $ref: '#/components/schemas/UserRole'
      description: Basic informations of a user
      example:
        role: FFM
        name: Mario
        surename: Rossi
        email: mario.rossi@example.it
        username: mario.rossi
    UserRole:
      type: string
      description: Role of the user
      example: FFM
      enum:
      - FFM
      - SMO
      - System
    Alert:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ID'
        timestamp:
          type: string
          format: date-time
        machineID:
          type: integer
          example: 3
        severity:
          $ref: '#/components/schemas/Severity'
        alertDescription:
          type: string
          example: Machine overheated
        kpi:
          $ref: '#/components/schemas/KPIID'
      description: Informations related to an alert
      example:
        severity: low
        machineID: 3
        kpi: good_cycles
        id: 1
        alertDescription: Machine overheated
        timestamp: 2000-01-23T04:56:07.000+00:00
    Severity:
      type: string
      description: The importance degree of an alert
      example: low
      enum:
      - low
      - medium
      - high
    MachineKPIValues:
      type: object
      properties:
        values:
          type: array
          items:
            $ref: '#/components/schemas/MachineKPIValues_values'
        unit:
          type: string
          example: W
      description: Informations of a KPI related to a machine id
      example:
        unit: W
        values:
        - endDate: 2024-10-19
          value: 27.5
          startDate: 2024-10-14
        - endDate: 2024-10-19
          value: 27.5
          startDate: 2024-10-14
    ReportHeader:
      type: object
      properties:
        id:
          type: integer
        creationTime:
          type: string
        title:
          type: string
      description: Basic report information useful for small download
      example:
        creationTime: creationTime
        id: 0
        title: title
    Report:
      type: object
      properties:
        header:
          $ref: '#/components/schemas/ReportHeader'
        data:
          type: object
      description: Full report data
      example:
        data: {}
        header:
          creationTime: creationTime
          id: 0
          title: title
    SensorKPIItem:
      type: object
      properties:
        kpi:
          $ref: '#/components/schemas/KPIID'
        value:
          type: number
          example: 4.5
      description: Couple of KPI id and value
    SensorMeasurement:
      type: array
      description: Array of KPIs and values for them
      items:
        $ref: '#/components/schemas/SensorKPIItem'
    SensorData:
      type: object
      properties:
        machineID:
          $ref: '#/components/schemas/ID'
        kpi:
          $ref: '#/components/schemas/KPIID'
        timestampSeries:
          type: array
          items:
            type: string
            format: date-time
        valueSeries:
          type: array
          items:
            type: number
            example: 4.5
      description: Series of values of a KPI generated by a machine. The i-th timestamp
        is related to the i-th value.
      example:
        machineID: 1
        kpi: good_cycles
        valueSeries:
        - 4.5
        - 4.5
        timestampSeries:
        - 2000-01-23T04:56:07.000+00:00
        - 2000-01-23T04:56:07.000+00:00
    AlertMonitor:
      type: object
      properties:
        timeWindow:
          type: integer
          description: "The time interval (in seconds) used as context for the expression\
            \ evaluation, a window of 3600 evaluates the expression on the last hour"
          example: 100000
        expression:
          type: string
          description: Expression involving KPIs and aggregation functions on a given
            machine
          example: sum(Good Cycles) > 1000
        machineID:
          $ref: '#/components/schemas/ID'
        monitorUUID:
          $ref: '#/components/schemas/UUID'
      description: Informations related to an expression monitored by the KPI engine
        used to fire alets. An alert will be fired if the expression on a machine
        is evaluated to True.
      example:
        timeWindow: 100000
        expression: sum(Good Cycles) > 1000
        machineID: 1
        monitorUUID: f9fe2b44-90a2-4c9a-dd0f-d8a913a31328
    AIResponse:
      type: object
      properties:
        type:
          type: string
          example: textual
          enum:
          - textual
          - dashboard
          - report
        text:
          type: string
          example: The total power consumed last week by all machines is 1000 kWh
        dashboard:
          $ref: '#/components/schemas/AIResponse_dashboard'
        report:
          $ref: '#/components/schemas/AIResponse_report'
      example:
        report:
          title: title
          sections:
            Key Performance Metrics:
            - Key Performance Metrics
            - Key Performance Metrics
            Overall Trends:
            - Overall Trends
            - Overall Trends
            Observations:
            - Observations
            - Observations
        text: The total power consumed last week by all machines is 1000 kWh
        type: textual
        dashboard:
          values: ""
          x_axis_name: x_axis_name
          y_axis_name: y_axis_name
    inline_response_200:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ID'
        status:
          $ref: '#/components/schemas/MachineStatus'
      example:
        id: 1
        status: idle
    inline_response_404:
      oneOf:
      - $ref: '#/components/schemas/MachineNotFoundError'
      - $ref: '#/components/schemas/KPINotFoundError'
    inline_response_200_1:
      type: object
      properties:
        ids:
          type: array
          items:
            $ref: '#/components/schemas/ID'
        names:
          type: array
          items:
            type: string
            example: Cutting Machine 2
      example:
        names:
        - Cutting Machine 2
        - Cutting Machine 2
        ids:
        - 1
        - 1
    MachineXKPIInfo_relation:
      type: object
      properties:
        machineID:
          $ref: '#/components/schemas/ID'
        kpiID:
          $ref: '#/components/schemas/ID'
      example:
        machineID: null
        kpiID: null
    MachineKPIValues_values:
      type: object
      properties:
        startDate:
          type: string
          example: 2024-10-14
        endDate:
          type: string
          example: 2024-10-19
        value:
          type: number
          example: 27.5
      example:
        endDate: 2024-10-19
        value: 27.5
        startDate: 2024-10-14
    AIResponse_dashboard:
      type: object
      properties:
        x_axis_name:
          type: string
        y_axis_name:
          type: string
        values:
          oneOf:
          - type: object
            properties:
              x:
                type: string
                format: date
                example: 2024-03-01
              "y":
                type: number
                example: 2.5
          - type: object
            properties:
              start_date:
                type: string
                format: date
                example: 2024-03-01
              end_date:
                type: string
                format: date
                example: 2024-03-08
              value:
                type: number
                example: 1.4
      example:
        values: ""
        x_axis_name: x_axis_name
        y_axis_name: y_axis_name
    AIResponse_report_sections:
      type: object
      properties:
        Key Performance Metrics:
          type: array
          items:
            type: string
        Overall Trends:
          type: array
          items:
            type: string
        Observations:
          type: array
          items:
            type: string
      example:
        Key Performance Metrics:
        - Key Performance Metrics
        - Key Performance Metrics
        Overall Trends:
        - Overall Trends
        - Overall Trends
        Observations:
        - Observations
        - Observations
    AIResponse_report:
      type: object
      properties:
        title:
          type: string
        sections:
          $ref: '#/components/schemas/AIResponse_report_sections'
      example:
        title: title
        sections:
          Key Performance Metrics:
          - Key Performance Metrics
          - Key Performance Metrics
          Overall Trends:
          - Overall Trends
          - Overall Trends
          Observations:
          - Observations
          - Observations
  responses:
    SuccessMessage:
      description: Success Message
      content:
        application/json:
          schema:
            type: string
            example: Success
            x-content-type: application/json
    WrongUserPass:
      description: Wrong credentials error
      content:
        application/json:
          schema:
            type: string
            example: Wrong credentials
            x-content-type: application/json
    AlertNotFound:
      description: User not found
      content:
        application/json:
          schema:
            type: string
            example: Alert not found
            x-content-type: application/json
    UserNotFound:
      description: User not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserNotFoundError'
    KPINotFound:
      description: KPI not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/KPINotFoundError'
    MachineNotFound:
      description: Machine not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MachineNotFoundError'
    ResourceCreated:
      description: Resource created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ID'
    ResourceCreatedUUID:
      description: Resource created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UUID'
    AuthorizationError:
      description: Access token not valid
      content:
        application/json:
          schema:
            type: string
            example: Unauthorized
            x-content-type: application/json
    ConnectionError:
      description: Can't connect to the requested service
      content:
        application/json:
          schema:
            type: string
            example: Connection Error
            x-content-type: application/json
    ParametersError:
      description: Invalid parameters
      content:
        application/json:
          schema:
            type: string
            example: Invalid parameters
            x-content-type: application/json
    AlertMonitorNotFound:
      description: Alert monitor not found
      content:
        application/json:
          schema:
            type: string
            example: Alert monitor not found
            x-content-type: application/json
  parameters:
    uuid:
      name: uuid
      in: path
      description: UUID of the resource
      required: true
      style: simple
      explode: false
      schema:
        $ref: '#/components/schemas/UUID'
    id:
      name: id
      in: path
      description: ID of the resource
      required: true
      style: simple
      explode: false
      schema:
        $ref: '#/components/schemas/ID'
    KPIID:
      name: KPIID
      in: path
      description: ID of the KPI
      required: true
      style: simple
      explode: false
      schema:
        $ref: '#/components/schemas/KPIID'
    MachineIDFilter:
      name: machines
      in: header
      description: Specific machines to restrict the query to
      required: false
      style: simple
      explode: false
      schema:
        $ref: '#/components/schemas/MachineIDFilter'
    DataTypeFilter:
      name: dataTypes
      in: header
      description: Specific basic kpi to restrict the query to
      required: false
      style: simple
      explode: false
      schema:
        $ref: '#/components/schemas/DataTypeFilter'
    MachineTypeFilter:
      name: machineTypes
      in: header
      description: Specific machine types to restrict the query to
      required: false
      style: simple
      explode: false
      schema:
        type: array
        items:
          type: string
          example: Laser Welding
      example:
      - Laser Welding
    ProductionLineFilter:
      name: productionLines
      in: header
      description: Specific production lines to restrict the query to
      required: false
      style: simple
      explode: false
      schema:
        type: array
        items:
          type: integer
          example: 2
      example:
      - 1
    FactoryFilter:
      name: factories
      in: header
      description: Specific factories to restrict the query to
      required: false
      style: simple
      explode: false
      schema:
        type: array
        items:
          type: string
          example: Factory X
      example:
      - Factory X
    StatusFilter:
      name: machineStatus
      in: header
      description: Specific machine status to restrict the query to
      required: false
      style: simple
      explode: false
      schema:
        $ref: '#/components/schemas/MachineStatus'
    AggregationInterval:
      name: aggregationInterval
      in: header
      description: Requested time granularity of KPI (defaults to day)
      required: false
      style: simple
      explode: false
      schema:
        type: string
        example: day
        enum:
        - day
        - week
        - month
        - year
        - overall
    AggregationType:
      name: aggregationOp
      in: header
      description: Aggregation function to perform (defaults to sum)
      required: false
      style: simple
      explode: false
      schema:
        $ref: '#/components/schemas/AggregationType'
    RawDataAggregationSelector:
      name: aggregationSelector
      in: header
      description: Aggregation type to retrieve
      required: true
      style: simple
      explode: false
      schema:
        type: string
        example: sum
        enum:
        - sum
        - avg
        - min
        - max
  securitySchemes:
    api_token_auth:
      type: http
      scheme: bearer
      x-bearerInfoFunc: swagger_server.controllers.authorization_controller.check_api_token_auth
    machine_auth:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: https://SA2024C.com/oauth/token
          scopes:
            read:machine: Read machine data
            write:machine: Write machine data
            read:KPI: Read KPI data
            write:KPI: Write KPI data
            read:user: Access user data
            write:user: Modify user data
            read:alert: Read alert data
            write:alert: Edit alert data
            read:report: Read SMO report data
            write:report: Edit report data
            read:aiquery: Get ai query responses
            write:aiquery: Request new ai queries
            read:data: Access raw data
        authorizationCode:
          authorizationUrl: https://SA2024C.com/oauth/authorize
          tokenUrl: https://SA2024C.com/oauth/token
          scopes:
            read:machine: Read machine data
            write:machine: Write machine data
            read:KPI: Read KPI data
            write:KPI: Write KPI data
            read:user: Access user data
            write:user: Modify user data
            read:alert: Read alert data
            write:alert: Edit alert data
            read:report: Read SMO report data
            write:report: Edit report data
            read:data: Access raw data
      x-tokenInfoFunc: swagger_server.controllers.authorization_controller.check_machine_auth
      x-scopeValidateFunc: swagger_server.controllers.authorization_controller.validate_scope_machine_auth

