# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.id import ID  # noqa: F401,E501
from swagger_server.models.kpi_basic_info import KPIBasicInfo  # noqa: F401,E501
from swagger_server.models.kpi_name import KPIName  # noqa: F401,E501
from swagger_server.models.kpiid import KPIID  # noqa: F401,E501
from swagger_server import util


class KPIBasicInfoWithNumericID(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, name_id: KPIID=None, description: KPIName=None, formula: str=None, category: str=None, unit: str=None, relation_number: ID=None):  # noqa: E501
        """KPIBasicInfoWithNumericID - a model defined in Swagger

        :param name_id: The name_id of this KPIBasicInfoWithNumericID.  # noqa: E501
        :type name_id: KPIID
        :param description: The description of this KPIBasicInfoWithNumericID.  # noqa: E501
        :type description: KPIName
        :param formula: The formula of this KPIBasicInfoWithNumericID.  # noqa: E501
        :type formula: str
        :param category: The category of this KPIBasicInfoWithNumericID.  # noqa: E501
        :type category: str
        :param unit: The unit of this KPIBasicInfoWithNumericID.  # noqa: E501
        :type unit: str
        :param relation_number: The relation_number of this KPIBasicInfoWithNumericID.  # noqa: E501
        :type relation_number: ID
        """
        self.swagger_types = {
            'name_id': KPIID,
            'description': KPIName,
            'formula': str,
            'category': str,
            'unit': str,
            'relation_number': ID
        }

        self.attribute_map = {
            'name_id': 'nameID',
            'description': 'description',
            'formula': 'formula',
            'category': 'category',
            'unit': 'unit',
            'relation_number': 'relationNumber'
        }
        self._name_id = name_id
        self._description = description
        self._formula = formula
        self._category = category
        self._unit = unit
        self._relation_number = relation_number

    @classmethod
    def from_dict(cls, dikt) -> 'KPIBasicInfoWithNumericID':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The KPIBasicInfoWithNumericID of this KPIBasicInfoWithNumericID.  # noqa: E501
        :rtype: KPIBasicInfoWithNumericID
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name_id(self) -> KPIID:
        """Gets the name_id of this KPIBasicInfoWithNumericID.


        :return: The name_id of this KPIBasicInfoWithNumericID.
        :rtype: KPIID
        """
        return self._name_id

    @name_id.setter
    def name_id(self, name_id: KPIID):
        """Sets the name_id of this KPIBasicInfoWithNumericID.


        :param name_id: The name_id of this KPIBasicInfoWithNumericID.
        :type name_id: KPIID
        """

        self._name_id = name_id

    @property
    def description(self) -> KPIName:
        """Gets the description of this KPIBasicInfoWithNumericID.


        :return: The description of this KPIBasicInfoWithNumericID.
        :rtype: KPIName
        """
        return self._description

    @description.setter
    def description(self, description: KPIName):
        """Sets the description of this KPIBasicInfoWithNumericID.


        :param description: The description of this KPIBasicInfoWithNumericID.
        :type description: KPIName
        """

        self._description = description

    @property
    def formula(self) -> str:
        """Gets the formula of this KPIBasicInfoWithNumericID.

        the expression used to compute the KPI or null for KPIs that don't require additional computations.  # noqa: E501

        :return: The formula of this KPIBasicInfoWithNumericID.
        :rtype: str
        """
        return self._formula

    @formula.setter
    def formula(self, formula: str):
        """Sets the formula of this KPIBasicInfoWithNumericID.

        the expression used to compute the KPI or null for KPIs that don't require additional computations.  # noqa: E501

        :param formula: The formula of this KPIBasicInfoWithNumericID.
        :type formula: str
        """

        self._formula = formula

    @property
    def category(self) -> str:
        """Gets the category of this KPIBasicInfoWithNumericID.


        :return: The category of this KPIBasicInfoWithNumericID.
        :rtype: str
        """
        return self._category

    @category.setter
    def category(self, category: str):
        """Sets the category of this KPIBasicInfoWithNumericID.


        :param category: The category of this KPIBasicInfoWithNumericID.
        :type category: str
        """

        self._category = category

    @property
    def unit(self) -> str:
        """Gets the unit of this KPIBasicInfoWithNumericID.

        Unit of measurement  # noqa: E501

        :return: The unit of this KPIBasicInfoWithNumericID.
        :rtype: str
        """
        return self._unit

    @unit.setter
    def unit(self, unit: str):
        """Sets the unit of this KPIBasicInfoWithNumericID.

        Unit of measurement  # noqa: E501

        :param unit: The unit of this KPIBasicInfoWithNumericID.
        :type unit: str
        """

        self._unit = unit

    @property
    def relation_number(self) -> ID:
        """Gets the relation_number of this KPIBasicInfoWithNumericID.


        :return: The relation_number of this KPIBasicInfoWithNumericID.
        :rtype: ID
        """
        return self._relation_number

    @relation_number.setter
    def relation_number(self, relation_number: ID):
        """Sets the relation_number of this KPIBasicInfoWithNumericID.


        :param relation_number: The relation_number of this KPIBasicInfoWithNumericID.
        :type relation_number: ID
        """

        self._relation_number = relation_number
