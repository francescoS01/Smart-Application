# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.id import ID  # noqa: F401,E501
from swagger_server.models.kpiid import KPIID  # noqa: F401,E501
from swagger_server import util


class SensorData(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, machine_id: ID=None, kpi: KPIID=None, timestamp_series: List[datetime]=None, value_series: List[float]=None):  # noqa: E501
        """SensorData - a model defined in Swagger

        :param machine_id: The machine_id of this SensorData.  # noqa: E501
        :type machine_id: ID
        :param kpi: The kpi of this SensorData.  # noqa: E501
        :type kpi: KPIID
        :param timestamp_series: The timestamp_series of this SensorData.  # noqa: E501
        :type timestamp_series: List[datetime]
        :param value_series: The value_series of this SensorData.  # noqa: E501
        :type value_series: List[float]
        """
        self.swagger_types = {
            'machine_id': ID,
            'kpi': KPIID,
            'timestamp_series': List[datetime],
            'value_series': List[float]
        }

        self.attribute_map = {
            'machine_id': 'machineID',
            'kpi': 'kpi',
            'timestamp_series': 'timestampSeries',
            'value_series': 'valueSeries'
        }
        self._machine_id = machine_id
        self._kpi = kpi
        self._timestamp_series = timestamp_series
        self._value_series = value_series

    @classmethod
    def from_dict(cls, dikt) -> 'SensorData':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The SensorData of this SensorData.  # noqa: E501
        :rtype: SensorData
        """
        return util.deserialize_model(dikt, cls)

    @property
    def machine_id(self) -> ID:
        """Gets the machine_id of this SensorData.


        :return: The machine_id of this SensorData.
        :rtype: ID
        """
        return self._machine_id

    @machine_id.setter
    def machine_id(self, machine_id: ID):
        """Sets the machine_id of this SensorData.


        :param machine_id: The machine_id of this SensorData.
        :type machine_id: ID
        """

        self._machine_id = machine_id

    @property
    def kpi(self) -> KPIID:
        """Gets the kpi of this SensorData.


        :return: The kpi of this SensorData.
        :rtype: KPIID
        """
        return self._kpi

    @kpi.setter
    def kpi(self, kpi: KPIID):
        """Sets the kpi of this SensorData.


        :param kpi: The kpi of this SensorData.
        :type kpi: KPIID
        """

        self._kpi = kpi

    @property
    def timestamp_series(self) -> List[datetime]:
        """Gets the timestamp_series of this SensorData.


        :return: The timestamp_series of this SensorData.
        :rtype: List[datetime]
        """
        return self._timestamp_series

    @timestamp_series.setter
    def timestamp_series(self, timestamp_series: List[datetime]):
        """Sets the timestamp_series of this SensorData.


        :param timestamp_series: The timestamp_series of this SensorData.
        :type timestamp_series: List[datetime]
        """

        self._timestamp_series = timestamp_series

    @property
    def value_series(self) -> List[float]:
        """Gets the value_series of this SensorData.


        :return: The value_series of this SensorData.
        :rtype: List[float]
        """
        return self._value_series

    @value_series.setter
    def value_series(self, value_series: List[float]):
        """Sets the value_series of this SensorData.


        :param value_series: The value_series of this SensorData.
        :type value_series: List[float]
        """

        self._value_series = value_series
