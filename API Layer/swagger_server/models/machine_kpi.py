# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.id import ID  # noqa: F401,E501
from swagger_server.models.machine_kpi_info import MachineKPIInfo  # noqa: F401,E501
from swagger_server import util


class MachineKPI(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, machine_id: ID=None, kpi_calculation_info: MachineKPIInfo=None, expression: str=None):  # noqa: E501
        """MachineKPI - a model defined in Swagger

        :param machine_id: The machine_id of this MachineKPI.  # noqa: E501
        :type machine_id: ID
        :param kpi_calculation_info: The kpi_calculation_info of this MachineKPI.  # noqa: E501
        :type kpi_calculation_info: MachineKPIInfo
        :param expression: The expression of this MachineKPI.  # noqa: E501
        :type expression: str
        """
        self.swagger_types = {
            'machine_id': ID,
            'kpi_calculation_info': MachineKPIInfo,
            'expression': str
        }

        self.attribute_map = {
            'machine_id': 'machineID',
            'kpi_calculation_info': 'kpiCalculationInfo',
            'expression': 'expression'
        }
        self._machine_id = machine_id
        self._kpi_calculation_info = kpi_calculation_info
        self._expression = expression

    @classmethod
    def from_dict(cls, dikt) -> 'MachineKPI':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The MachineKPI of this MachineKPI.  # noqa: E501
        :rtype: MachineKPI
        """
        return util.deserialize_model(dikt, cls)

    @property
    def machine_id(self) -> ID:
        """Gets the machine_id of this MachineKPI.


        :return: The machine_id of this MachineKPI.
        :rtype: ID
        """
        return self._machine_id

    @machine_id.setter
    def machine_id(self, machine_id: ID):
        """Sets the machine_id of this MachineKPI.


        :param machine_id: The machine_id of this MachineKPI.
        :type machine_id: ID
        """

        self._machine_id = machine_id

    @property
    def kpi_calculation_info(self) -> MachineKPIInfo:
        """Gets the kpi_calculation_info of this MachineKPI.


        :return: The kpi_calculation_info of this MachineKPI.
        :rtype: MachineKPIInfo
        """
        return self._kpi_calculation_info

    @kpi_calculation_info.setter
    def kpi_calculation_info(self, kpi_calculation_info: MachineKPIInfo):
        """Sets the kpi_calculation_info of this MachineKPI.


        :param kpi_calculation_info: The kpi_calculation_info of this MachineKPI.
        :type kpi_calculation_info: MachineKPIInfo
        """

        self._kpi_calculation_info = kpi_calculation_info

    @property
    def expression(self) -> str:
        """Gets the expression of this MachineKPI.

        The expression used to compute the KPI  # noqa: E501

        :return: The expression of this MachineKPI.
        :rtype: str
        """
        return self._expression

    @expression.setter
    def expression(self, expression: str):
        """Sets the expression of this MachineKPI.

        The expression used to compute the KPI  # noqa: E501

        :param expression: The expression of this MachineKPI.
        :type expression: str
        """

        self._expression = expression
