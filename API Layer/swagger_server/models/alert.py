# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.id import ID  # noqa: F401,E501
from swagger_server.models.kpiid import KPIID  # noqa: F401,E501
from swagger_server.models.severity import Severity  # noqa: F401,E501
from swagger_server import util


class Alert(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, id: ID=None, timestamp: datetime=None, machine_id: int=None, severity: Severity=None, alert_description: str=None, kpi: KPIID=None):  # noqa: E501
        """Alert - a model defined in Swagger

        :param id: The id of this Alert.  # noqa: E501
        :type id: ID
        :param timestamp: The timestamp of this Alert.  # noqa: E501
        :type timestamp: datetime
        :param machine_id: The machine_id of this Alert.  # noqa: E501
        :type machine_id: int
        :param severity: The severity of this Alert.  # noqa: E501
        :type severity: Severity
        :param alert_description: The alert_description of this Alert.  # noqa: E501
        :type alert_description: str
        :param kpi: The kpi of this Alert.  # noqa: E501
        :type kpi: KPIID
        """
        self.swagger_types = {
            'id': ID,
            'timestamp': datetime,
            'machine_id': int,
            'severity': Severity,
            'alert_description': str,
            'kpi': KPIID
        }

        self.attribute_map = {
            'id': 'id',
            'timestamp': 'timestamp',
            'machine_id': 'machineID',
            'severity': 'severity',
            'alert_description': 'alertDescription',
            'kpi': 'kpi'
        }
        self._id = id
        self._timestamp = timestamp
        self._machine_id = machine_id
        self._severity = severity
        self._alert_description = alert_description
        self._kpi = kpi

    @classmethod
    def from_dict(cls, dikt) -> 'Alert':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Alert of this Alert.  # noqa: E501
        :rtype: Alert
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> ID:
        """Gets the id of this Alert.


        :return: The id of this Alert.
        :rtype: ID
        """
        return self._id

    @id.setter
    def id(self, id: ID):
        """Sets the id of this Alert.


        :param id: The id of this Alert.
        :type id: ID
        """

        self._id = id

    @property
    def timestamp(self) -> datetime:
        """Gets the timestamp of this Alert.


        :return: The timestamp of this Alert.
        :rtype: datetime
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp: datetime):
        """Sets the timestamp of this Alert.


        :param timestamp: The timestamp of this Alert.
        :type timestamp: datetime
        """

        self._timestamp = timestamp

    @property
    def machine_id(self) -> int:
        """Gets the machine_id of this Alert.


        :return: The machine_id of this Alert.
        :rtype: int
        """
        return self._machine_id

    @machine_id.setter
    def machine_id(self, machine_id: int):
        """Sets the machine_id of this Alert.


        :param machine_id: The machine_id of this Alert.
        :type machine_id: int
        """

        self._machine_id = machine_id

    @property
    def severity(self) -> Severity:
        """Gets the severity of this Alert.


        :return: The severity of this Alert.
        :rtype: Severity
        """
        return self._severity

    @severity.setter
    def severity(self, severity: Severity):
        """Sets the severity of this Alert.


        :param severity: The severity of this Alert.
        :type severity: Severity
        """

        self._severity = severity

    @property
    def alert_description(self) -> str:
        """Gets the alert_description of this Alert.


        :return: The alert_description of this Alert.
        :rtype: str
        """
        return self._alert_description

    @alert_description.setter
    def alert_description(self, alert_description: str):
        """Sets the alert_description of this Alert.


        :param alert_description: The alert_description of this Alert.
        :type alert_description: str
        """

        self._alert_description = alert_description

    @property
    def kpi(self) -> KPIID:
        """Gets the kpi of this Alert.


        :return: The kpi of this Alert.
        :rtype: KPIID
        """
        return self._kpi

    @kpi.setter
    def kpi(self, kpi: KPIID):
        """Sets the kpi of this Alert.


        :param kpi: The kpi of this Alert.
        :type kpi: KPIID
        """

        self._kpi = kpi
