"""
    This module contains methods that handle REST API requests related to the RAG agent.
"""
import connexion
import six
import requests

from swagger_server.models.ai_query import AIQuery  # noqa: E501
from swagger_server.models.ai_response import AIResponse  # noqa: E501
from swagger_server import util

from swagger_server.utils import authentication_utils
from swagger_server.utils.header_parameters import ParameterFormatter


RAG_SERVICE = 'app'
PORT = '5001'
RAG_URL = 'http://'+RAG_SERVICE+':'+PORT
TIMEOUT = 1200

def ai_query_post():  # noqa: E501
    """Submits a query to the ai agent returning its response

    Submits a textual query to the ai agent returning a JSON response. The response type field determines the format of the content generated by the ai agent. The response may thus relate to a text, a graph or a report. # noqa: E501

    :param query: The textual query to send to the ai agent
    :type query: dict | bytes

    :rtype: AIResponse
    """
    
    # Parse parameters
    query = None
    try:
        query = ParameterFormatter(connexion.request, 'query').as_string()
    except:
        return 'Invalid parameters', 400
    
    try:
        headers = {'Content-Type': 'application/json'}
        payload = {'query': query}
        response = requests.post(f'{RAG_URL}/user-query', json=payload, headers=headers, timeout=TIMEOUT, verify=False)
        if response.status_code != 200:
            # Body contains error message
            err_msg = response.json()['error']
            return f"RAG error: {err_msg}", response.status_code
        return response.json(), 200
    except:
        return 'Internal server error', 500
